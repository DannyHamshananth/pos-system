generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductCategory {
  id      Int       @id @default(autoincrement())
  name    String
  product Product[]

  @@map("product_categories")
}

model Product {
  id                 Int              @id @default(autoincrement())
  name               String
  photo              String?
  description        String?
  suggestedUnitPrice Int?
  unitPrice          Int
  productCategoryId  Int?
  productCategory    ProductCategory? @relation(fields: [productCategoryId], references: [id])
  saleLine           SaleLine[]

  @@map("products")
}

model Sale {
  id         Int        @id @default(autoincrement())
  invoicenum Int
  subTotal   Int
  saleDate   DateTime   @default(now())
  discount   Int        @default(0)
  total      Int
  saleLine   SaleLine[]

  @@map("sales")
}

model SaleLine {
  saleId    Int
  productId Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  sale      Sale    @relation(fields: [saleId], references: [id])

  @@id([saleId, productId])
  @@map("sale_lines")
}

model User {
  id              String    @id @default(cuid())
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  role            String    @default("user")
  image           String?
  sessions        Session[]
  accounts        Account[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  expires      DateTime
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  user               User    @relation(fields: [userId], references: [id])
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  @@unique([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}
